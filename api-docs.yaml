openapi: 3.0.1
info:
  title: Demo API
  description: Документация API для Demo приложения
servers:
- url: http://localhost:8092
paths:
  /property-view/hotels/{id}/amenities:
    post:
      tags:
      - hotel-controller
      summary: Добавить удобства в отель по id
      operationId: addAmenities
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "404":
          description: Отель с таким id не найден
        "200":
          description: Удобства успешно добавлены
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HotelDetailsDTO"
  /property-view/hotels/:
    get:
      tags:
      - hotel-controller
      summary: Получить список всех отелей с краткой информацией
      operationId: getAllHotels
      responses:
        "200":
          description: Список отелей успешно получен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HotelDTO"
    post:
      tags:
      - hotel-controller
      summary: Создать новый отель
      operationId: createHotel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HotelCreateDTO"
        required: true
      responses:
        "201":
          description: Отель успешно создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HotelDTO"
        "400":
          description: Некорректные данные
  /property-view/hotels/{id}:
    get:
      tags:
      - hotel-controller
      summary: Получить полную информацию об отеле по id
      operationId: getHotelByID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Информация об отеле успешно получена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HotelDetailsDTO"
        "404":
          description: Отель c таким id не найден
  /property-view/hotels/search:
    get:
      tags:
      - hotel-controller
      summary: Поиск отелей по критериям
      operationId: searchByCriteria
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: brand
        in: query
        required: false
        schema:
          type: string
      - name: country
        in: query
        required: false
        schema:
          type: string
      - name: city
        in: query
        required: false
        schema:
          type: string
      - name: amenities
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: Поиск успешно завершен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HotelDTO"
  /property-view/hotels/histogram/{param}:
    get:
      tags:
      - hotel-controller
      summary: Создать гистограмму по параметру
      operationId: createHistogramByParameter
      parameters:
      - name: param
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Гистограмма успешно создана
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Недопустимый параметр
components:
  schemas:
    AddressDTO:
      type: object
      properties:
        houseNumber:
          type: integer
          format: int32
        street:
          type: string
        city:
          type: string
        country:
          type: string
        postCode:
          type: integer
          format: int32
    ArrivalTimeDTO:
      type: object
      properties:
        checkIn:
          type: string
        checkOut:
          type: string
    ContactDTO:
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
    HotelDetailsDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        brand:
          type: string
        address:
          $ref: "#/components/schemas/AddressDTO"
        contact:
          $ref: "#/components/schemas/ContactDTO"
        arrivalTime:
          $ref: "#/components/schemas/ArrivalTimeDTO"
        amenities:
          type: array
          items:
            type: string
    HotelCreateDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        brand:
          type: string
        address:
          $ref: "#/components/schemas/AddressDTO"
        contact:
          $ref: "#/components/schemas/ContactDTO"
        arrivalTime:
          $ref: "#/components/schemas/ArrivalTimeDTO"
    HotelDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        address:
          type: string
        phone:
          type: string
